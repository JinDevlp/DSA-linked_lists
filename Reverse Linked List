# 09/13/2022
# 206. Reverse Linked List
"""
Given the head of a singly linked list, reverse the list, and return the reversed list.

EX: 
Input: head = [1,2,3,4,5]
Output: [5,4,3,2,1]
    
Input: head = [1,2]
Output: [2,1]

Input: head = []
Output: []

"""

# Time & Space Complexity : O(n) since we have to go through all the nodes in the linked list
# We need to make pointers to get access to each node when we are reversing the list 
# prev for before head 
# cur for head 
# after for head.next



# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        prev, cur = None, head 
        while cur: # while cur is not None
            after = cur.next 
            cur.next = prev
            prev = cur
            cur = after
        return prev
